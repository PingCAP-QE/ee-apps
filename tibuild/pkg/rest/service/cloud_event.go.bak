package service

import (
	"fmt"

	cloudevents "github.com/cloudevents/sdk-go/v2"
	"github.com/google/go-github/github"
)

type CloudEventSender struct {
	client cloudevents.Client
}

func (s CloudEventSender) SendDevBuildTrigger(devbuild DevBuild) {

}

func NewDevBuildCloudEvent(devbuild DevBuild) *cloudevents.Event {
	event := cloudevents.NewEvent()
	event.SetSubject(fmt.Sprint(devbuild.ID))
	event.SetExtension("user", devbuild.Meta.CreatedBy)
	event.SetSource("https://tibuild.pingcap/com/dev-build/")
	eventData := &github.PushEvent{
		Ref:   github.String(fmt.Sprintf("refs/heads/%s", pt.Branch)),
		After: github.String(pt.Branch),
		Repo: &github.PushEventRepository{
			Name:     devbuild.Spec.Product,
			CloneURL: github.String(fmt.Sprintf("https://github.com/%s", devbuild.Spec.GithubRepo)),
			Owner: &github.User{
				Login: github.String("pingcap"),
			},
		},
	}
	event.SetData(cloudevents.ApplicationJSON, eventData)

	return &event
}

func (s CloudEventSender) SendHotfixTrigger() {

}
