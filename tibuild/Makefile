# Variables contain directory/file and so on
GO_BUILD_DIR = ./bin
WEBSITE_DIR = ./website/

GO_BINARY = ${GO_BUILD_DIR}/tibuild
WEBSITE_BINARY = ${WEBSITE_DIR}/build/

DOCKER_ADDRESS = hub.pingcap.net
DOCKER_NAME = tibuild/tibuild
DOCKER_TAG ?= $(shell git describe --dirty --always)
DOCKER_IMG ?= ${DOCKER_ADDRESS}/${DOCKER_NAME}:${DOCKER_TAG}
DOCKER_FILE = ./Dockerfile
K8S_METADATA_NAME = tibuild
K8S_DEPLOYMENT_FILE = ./deployments/kubernetes/
TIBUILD_MAIN_FILE = ./cmd/tibuild/

# =============================================================================
# The following are common build commands
# =============================================================================
build: build.web build.server

clean:
	@rm -rf ${GO_BUILD_DIR}
	@rm -rf ${WEBSITE_BINARY}
	@echo "clear all temporary files and folders successful hahaha!"

run: clean build
	./${GO_BINARY}

build.web:
	cd ${WEBSITE_DIR} && \
	yarn install && \
	yarn build

swagger:
	if [ ! -f $$(go env GOPATH)/bin/swag ]; then go install github.com/swaggo/swag/cmd/swag@v1.16.3; fi
	$$(go env GOPATH)/bin/swag fmt -d ./cmd/tibuild,./pkg/rest
	$$(go env GOPATH)/bin/swag init -d ./cmd/tibuild,./pkg/rest

test:
	go test ./...

build.server: swagger test
	go build -o ${GO_BINARY} ${TIBUILD_MAIN_FILE}

server:
	go run ${TIBUILD_MAIN_FILE}

# =============================================================================
# The following are common deployment commands
# =============================================================================
website/node_modules :
	cd website && yarn install

docker: website/node_modules
	docker buildx build --platform=linux/amd64,linux/arm64 -f ${DOCKER_FILE} -t ${DOCKER_IMG} . --push

docker.run:
	docker run -p 8080:8080 -t ${DOCKER_NAME}

k8s.init:
	kubectl apply -f ${K8S_DEPLOYMENT_FILE}/namespace.yaml
	kubectl apply -f ${K8S_DEPLOYMENT_FILE}/deployment.yaml
	kubectl apply -f ${K8S_DEPLOYMENT_FILE}/service.yaml
	@echo "k8s deploy project successful hahaha!"

k8s.update:
	kubectl rollout restart deployment/${K8S_METADATA_NAME} -n ${K8S_METADATA_NAME}

k8s.clean:
	kubectl delete all,ingress --all -n ${K8S_METADATA_NAME}
	@echo "k8s clean all resources successful hahaha!"

tbctl:
	docker buildx build ./tbctl -t hub.pingcap.net/tibuild/tbctl --platform linux/amd64,linux/arm64 --push

# =============================================================================
# Help documentation for commands
# =============================================================================
help:
	@echo "make build : build all binaries"
	@echo "make run : build all binaries and run"
	@echo "make clean : clear all temporary files and folders generated by the 'make build' or 'make run'"


.PHONY: build run clean help tbctl
.PHONY: build.web build.server docker docker.run k8s k8s.clean swagger test
