// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DevBuildsColumns holds the columns for the "dev_builds" table.
	DevBuildsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "product", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "edition", Type: field.TypeString, Nullable: true, Size: 32},
		{Name: "version", Type: field.TypeString, Nullable: true, Size: 128},
		{Name: "github_repo", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "git_ref", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "git_hash", Type: field.TypeString, Nullable: true, Size: 40},
		{Name: "plugin_git_ref", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "is_hotfix", Type: field.TypeBool, Default: false},
		{Name: "is_push_gcr", Type: field.TypeBool, Nullable: true},
		{Name: "target_img", Type: field.TypeString, Nullable: true, Size: 128},
		{Name: "pipeline_engine", Type: field.TypeString, Nullable: true, Size: 16, Default: "jenkins"},
		{Name: "builder_img", Type: field.TypeString, Nullable: true, Size: 128},
		{Name: "build_env", Type: field.TypeString, Nullable: true, Size: 128},
		{Name: "features", Type: field.TypeString, Nullable: true, Size: 128},
		{Name: "product_base_img", Type: field.TypeString, Nullable: true, Size: 128},
		{Name: "product_dockerfile", Type: field.TypeString, Nullable: true, Size: 128},
		{Name: "status", Type: field.TypeString, Nullable: true, Size: 16, Default: "pending"},
		{Name: "err_msg", Type: field.TypeString, Nullable: true, Size: 256},
		{Name: "pipeline_build_id", Type: field.TypeInt64, Nullable: true},
		{Name: "pipeline_start_at", Type: field.TypeTime, Nullable: true},
		{Name: "pipeline_end_at", Type: field.TypeTime, Nullable: true},
		{Name: "build_report", Type: field.TypeJSON, Nullable: true},
		{Name: "tekton_status", Type: field.TypeJSON, Nullable: true},
	}
	// DevBuildsTable holds the schema information for the "dev_builds" table.
	DevBuildsTable = &schema.Table{
		Name:       "dev_builds",
		Columns:    DevBuildsColumns,
		PrimaryKey: []*schema.Column{DevBuildsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DevBuildsTable,
	}
)

func init() {
	DevBuildsTable.Annotation = &entsql.Annotation{
		Table: "dev_builds",
	}
}
