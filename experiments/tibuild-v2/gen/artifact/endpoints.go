// Code generated by goa v3.20.0, DO NOT EDIT.
//
// artifact endpoints
//
// Command:
// $ goa gen github.com/PingCAP-QE/ee-apps/tibuild/design

package artifact

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "artifact" service endpoints.
type Endpoints struct {
	SyncImage goa.Endpoint
}

// NewEndpoints wraps the methods of the "artifact" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		SyncImage: NewSyncImageEndpoint(s),
	}
}

// Use applies the given middleware to all the "artifact" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.SyncImage = m(e.SyncImage)
}

// NewSyncImageEndpoint returns an endpoint function that calls the method
// "syncImage" of service "artifact".
func NewSyncImageEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ImageSyncRequest)
		return s.SyncImage(ctx, p)
	}
}
