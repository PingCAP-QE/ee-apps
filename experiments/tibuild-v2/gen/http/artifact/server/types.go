// Code generated by goa v3.20.0, DO NOT EDIT.
//
// artifact HTTP server types
//
// Command:
// $ goa gen github.com/PingCAP-QE/ee-apps/tibuild/design

package server

import (
	artifact "github.com/PingCAP-QE/ee-apps/tibuild/gen/artifact"
	goa "goa.design/goa/v3/pkg"
)

// SyncImageRequestBody is the type of the "artifact" service "syncImage"
// endpoint HTTP request body.
type SyncImageRequestBody struct {
	Source *string `form:"source,omitempty" json:"source,omitempty" xml:"source,omitempty"`
	Target *string `form:"target,omitempty" json:"target,omitempty" xml:"target,omitempty"`
}

// SyncImageResponseBody is the type of the "artifact" service "syncImage"
// endpoint HTTP response body.
type SyncImageResponseBody struct {
	Source string `form:"source" json:"source" xml:"source"`
	Target string `form:"target" json:"target" xml:"target"`
}

// SyncImageBadRequestResponseBody is the type of the "artifact" service
// "syncImage" endpoint HTTP response body for the "BadRequest" error.
type SyncImageBadRequestResponseBody struct {
	Code    int    `form:"code" json:"code" xml:"code"`
	Message string `form:"message" json:"message" xml:"message"`
}

// SyncImageInternalServerErrorResponseBody is the type of the "artifact"
// service "syncImage" endpoint HTTP response body for the
// "InternalServerError" error.
type SyncImageInternalServerErrorResponseBody struct {
	Code    int    `form:"code" json:"code" xml:"code"`
	Message string `form:"message" json:"message" xml:"message"`
}

// NewSyncImageResponseBody builds the HTTP response body from the result of
// the "syncImage" endpoint of the "artifact" service.
func NewSyncImageResponseBody(res *artifact.ImageSyncRequest) *SyncImageResponseBody {
	body := &SyncImageResponseBody{
		Source: res.Source,
		Target: res.Target,
	}
	return body
}

// NewSyncImageBadRequestResponseBody builds the HTTP response body from the
// result of the "syncImage" endpoint of the "artifact" service.
func NewSyncImageBadRequestResponseBody(res *artifact.HTTPError) *SyncImageBadRequestResponseBody {
	body := &SyncImageBadRequestResponseBody{
		Code:    res.Code,
		Message: res.Message,
	}
	return body
}

// NewSyncImageInternalServerErrorResponseBody builds the HTTP response body
// from the result of the "syncImage" endpoint of the "artifact" service.
func NewSyncImageInternalServerErrorResponseBody(res *artifact.HTTPError) *SyncImageInternalServerErrorResponseBody {
	body := &SyncImageInternalServerErrorResponseBody{
		Code:    res.Code,
		Message: res.Message,
	}
	return body
}

// NewSyncImageImageSyncRequest builds a artifact service syncImage endpoint
// payload.
func NewSyncImageImageSyncRequest(body *SyncImageRequestBody) *artifact.ImageSyncRequest {
	v := &artifact.ImageSyncRequest{
		Source: *body.Source,
		Target: *body.Target,
	}

	return v
}

// ValidateSyncImageRequestBody runs the validations defined on
// SyncImageRequestBody
func ValidateSyncImageRequestBody(body *SyncImageRequestBody) (err error) {
	if body.Source == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("source", "body"))
	}
	if body.Target == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("target", "body"))
	}
	return
}
