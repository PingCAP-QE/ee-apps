// Code generated by goa v3.16.1, DO NOT EDIT.
//
// oci HTTP client CLI support package
//
// Command:
// $ goa gen github.com/PingCAP-QE/ee-apps/dl/design

package client

import (
	oci "github.com/PingCAP-QE/ee-apps/dl/gen/oci"
	goa "goa.design/goa/v3/pkg"
)

// BuildListFilesPayload builds the payload for the oci list-files endpoint
// from CLI flags.
func BuildListFilesPayload(ociListFilesRepository string, ociListFilesTag string) (*oci.ListFilesPayload, error) {
	var repository string
	{
		repository = ociListFilesRepository
	}
	var tag string
	{
		tag = ociListFilesTag
	}
	v := &oci.ListFilesPayload{}
	v.Repository = repository
	v.Tag = tag

	return v, nil
}

// BuildDownloadFilePayload builds the payload for the oci download-file
// endpoint from CLI flags.
func BuildDownloadFilePayload(ociDownloadFileRepository string, ociDownloadFileTag string, ociDownloadFileFile string, ociDownloadFileFileRegex string) (*oci.DownloadFilePayload, error) {
	var err error
	var repository string
	{
		repository = ociDownloadFileRepository
	}
	var tag string
	{
		tag = ociDownloadFileTag
	}
	var file *string
	{
		if ociDownloadFileFile != "" {
			file = &ociDownloadFileFile
		}
	}
	var fileRegex *string
	{
		if ociDownloadFileFileRegex != "" {
			fileRegex = &ociDownloadFileFileRegex
			err = goa.MergeErrors(err, goa.ValidateFormat("file_regex", *fileRegex, goa.FormatRegexp))
			if err != nil {
				return nil, err
			}
		}
	}
	v := &oci.DownloadFilePayload{}
	v.Repository = repository
	v.Tag = tag
	v.File = file
	v.FileRegex = fileRegex

	return v, nil
}

// BuildDownloadFileSha256Payload builds the payload for the oci
// download-file-sha256 endpoint from CLI flags.
func BuildDownloadFileSha256Payload(ociDownloadFileSha256Repository string, ociDownloadFileSha256File string, ociDownloadFileSha256Tag string) (*oci.DownloadFileSha256Payload, error) {
	var repository string
	{
		repository = ociDownloadFileSha256Repository
	}
	var file string
	{
		file = ociDownloadFileSha256File
	}
	var tag string
	{
		tag = ociDownloadFileSha256Tag
	}
	v := &oci.DownloadFileSha256Payload{}
	v.Repository = repository
	v.File = file
	v.Tag = tag

	return v, nil
}
