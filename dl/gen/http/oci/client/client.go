// Code generated by goa v3.16.1, DO NOT EDIT.
//
// oci client HTTP transport
//
// Command:
// $ goa gen github.com/PingCAP-QE/ee-apps/dl/design

package client

import (
	"context"
	"net/http"

	oci "github.com/PingCAP-QE/ee-apps/dl/gen/oci"
	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the oci service endpoint HTTP clients.
type Client struct {
	// ListFiles Doer is the HTTP client used to make requests to the list-files
	// endpoint.
	ListFilesDoer goahttp.Doer

	// DownloadFile Doer is the HTTP client used to make requests to the
	// download-file endpoint.
	DownloadFileDoer goahttp.Doer

	// DownloadFileSha256 Doer is the HTTP client used to make requests to the
	// download-file-sha256 endpoint.
	DownloadFileSha256Doer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the oci service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		ListFilesDoer:          doer,
		DownloadFileDoer:       doer,
		DownloadFileSha256Doer: doer,
		RestoreResponseBody:    restoreBody,
		scheme:                 scheme,
		host:                   host,
		decoder:                dec,
		encoder:                enc,
	}
}

// ListFiles returns an endpoint that makes HTTP requests to the oci service
// list-files server.
func (c *Client) ListFiles() goa.Endpoint {
	var (
		encodeRequest  = EncodeListFilesRequest(c.encoder)
		decodeResponse = DecodeListFilesResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildListFilesRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ListFilesDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("oci", "list-files", err)
		}
		return decodeResponse(resp)
	}
}

// DownloadFile returns an endpoint that makes HTTP requests to the oci service
// download-file server.
func (c *Client) DownloadFile() goa.Endpoint {
	var (
		encodeRequest  = EncodeDownloadFileRequest(c.encoder)
		decodeResponse = DecodeDownloadFileResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildDownloadFileRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.DownloadFileDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("oci", "download-file", err)
		}
		res, err := decodeResponse(resp)
		if err != nil {
			resp.Body.Close()
			return nil, err
		}
		return &oci.DownloadFileResponseData{Result: res.(*oci.DownloadFileResult), Body: resp.Body}, nil
	}
}

// DownloadFileSha256 returns an endpoint that makes HTTP requests to the oci
// service download-file-sha256 server.
func (c *Client) DownloadFileSha256() goa.Endpoint {
	var (
		encodeRequest  = EncodeDownloadFileSha256Request(c.encoder)
		decodeResponse = DecodeDownloadFileSha256Response(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildDownloadFileSha256Request(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.DownloadFileSha256Doer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("oci", "download-file-sha256", err)
		}
		res, err := decodeResponse(resp)
		if err != nil {
			resp.Body.Close()
			return nil, err
		}
		return &oci.DownloadFileSha256ResponseData{Result: res.(*oci.DownloadFileSha256Result), Body: resp.Body}, nil
	}
}
