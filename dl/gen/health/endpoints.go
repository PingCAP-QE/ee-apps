// Code generated by goa v3.14.1, DO NOT EDIT.
//
// health endpoints
//
// Command:
// $ goa gen github.com/PingCAP-QE/ee-apps/dl/design

package health

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "health" service endpoints.
type Endpoints struct {
	Healthz goa.Endpoint
	Livez   goa.Endpoint
}

// NewEndpoints wraps the methods of the "health" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Healthz: NewHealthzEndpoint(s),
		Livez:   NewLivezEndpoint(s),
	}
}

// Use applies the given middleware to all the "health" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Healthz = m(e.Healthz)
	e.Livez = m(e.Livez)
}

// NewHealthzEndpoint returns an endpoint function that calls the method
// "healthz" of service "health".
func NewHealthzEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Healthz(ctx)
	}
}

// NewLivezEndpoint returns an endpoint function that calls the method "livez"
// of service "health".
func NewLivezEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Livez(ctx)
	}
}
