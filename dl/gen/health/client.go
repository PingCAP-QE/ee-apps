// Code generated by goa v3.14.1, DO NOT EDIT.
//
// health client
//
// Command:
// $ goa gen github.com/PingCAP-QE/ee-apps/dl/design

package health

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "health" service client.
type Client struct {
	HealthzEndpoint goa.Endpoint
	LivezEndpoint   goa.Endpoint
}

// NewClient initializes a "health" service client given the endpoints.
func NewClient(healthz, livez goa.Endpoint) *Client {
	return &Client{
		HealthzEndpoint: healthz,
		LivezEndpoint:   livez,
	}
}

// Healthz calls the "healthz" endpoint of the "health" service.
func (c *Client) Healthz(ctx context.Context) (res bool, err error) {
	var ires any
	ires, err = c.HealthzEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(bool), nil
}

// Livez calls the "livez" endpoint of the "health" service.
func (c *Client) Livez(ctx context.Context) (res bool, err error) {
	var ires any
	ires, err = c.LivezEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(bool), nil
}
