// Code generated by goa v3.19.1, DO NOT EDIT.
//
// image client
//
// Command:
// $ goa gen github.com/PingCAP-QE/ee-apps/publisher/internal/service/design -o
// ./service

package image

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "image" service client.
type Client struct {
	RequestToCopyEndpoint      goa.Endpoint
	QueryCopyingStatusEndpoint goa.Endpoint
}

// NewClient initializes a "image" service client given the endpoints.
func NewClient(requestToCopy, queryCopyingStatus goa.Endpoint) *Client {
	return &Client{
		RequestToCopyEndpoint:      requestToCopy,
		QueryCopyingStatusEndpoint: queryCopyingStatus,
	}
}

// RequestToCopy calls the "request-to-copy" endpoint of the "image" service.
func (c *Client) RequestToCopy(ctx context.Context, p *RequestToCopyPayload) (res string, err error) {
	var ires any
	ires, err = c.RequestToCopyEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// QueryCopyingStatus calls the "query-copying-status" endpoint of the "image"
// service.
func (c *Client) QueryCopyingStatus(ctx context.Context, p *QueryCopyingStatusPayload) (res string, err error) {
	var ires any
	ires, err = c.QueryCopyingStatusEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
