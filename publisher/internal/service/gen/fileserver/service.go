// Code generated by goa v3.19.1, DO NOT EDIT.
//
// fileserver service
//
// Command:
// $ goa gen github.com/PingCAP-QE/ee-apps/publisher/internal/service/design -o
// ./service

package fileserver

import (
	"context"
)

// Publisher service for static file server
type Service interface {
	// RequestToPublish implements request-to-publish.
	RequestToPublish(context.Context, *RequestToPublishPayload) (res []string, err error)
	// QueryPublishingStatus implements query-publishing-status.
	QueryPublishingStatus(context.Context, *QueryPublishingStatusPayload) (res string, err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "publisher"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "1.0.0"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "fileserver"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"request-to-publish", "query-publishing-status"}

// QueryPublishingStatusPayload is the payload type of the fileserver service
// query-publishing-status method.
type QueryPublishingStatusPayload struct {
	// request track id
	RequestID string
}

// RequestToPublishPayload is the payload type of the fileserver service
// request-to-publish method.
type RequestToPublishPayload struct {
	// The full url of the pushed OCI artifact, contain the tag part. It will parse
	// the repo from it.
	ArtifactURL string
}
