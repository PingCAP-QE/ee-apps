// Code generated by goa v3.19.1, DO NOT EDIT.
//
// tiup HTTP client types
//
// Command:
// $ goa gen github.com/PingCAP-QE/ee-apps/publisher/design

package client

import (
	tiup "github.com/PingCAP-QE/ee-apps/publisher/gen/tiup"
)

// RequestToPublishRequestBody is the type of the "tiup" service
// "request-to-publish" endpoint HTTP request body.
type RequestToPublishRequestBody struct {
	// The full url of the pushed OCI artifact, contain the tag part. It will parse
	// the repo from it.
	ArtifactURL string `form:"artifact_url" json:"artifact_url" xml:"artifact_url"`
	// Force set the version. Default is the artifact version read from
	// `org.opencontainers.image.version` of the manifest config.
	Version *string `form:"version,omitempty" json:"version,omitempty" xml:"version,omitempty"`
	// Staging is http://tiup.pingcap.net:8988, product is
	// http://tiup.pingcap.net:8987.
	TiupMirror string `form:"tiup-mirror" json:"tiup-mirror" xml:"tiup-mirror"`
	// The request id
	RequestID *string `form:"request_id,omitempty" json:"request_id,omitempty" xml:"request_id,omitempty"`
}

// NewRequestToPublishRequestBody builds the HTTP request body from the payload
// of the "request-to-publish" endpoint of the "tiup" service.
func NewRequestToPublishRequestBody(p *tiup.RequestToPublishPayload) *RequestToPublishRequestBody {
	body := &RequestToPublishRequestBody{
		ArtifactURL: p.ArtifactURL,
		Version:     p.Version,
		TiupMirror:  p.TiupMirror,
		RequestID:   p.RequestID,
	}
	return body
}
